import mongoose from 'mongoose';
import dotenv from 'dotenv';
import { Contact } from '../models/contact.js';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

dotenv.config();

const __dirname = path.dirname(fileURLToPath(import.meta.url));

export const initMongoConnection = async () => {
  try {
    const { MONGODB_USER, MONGODB_PASSWORD, MONGODB_URL, MONGODB_DB } = process.env;
    const connectionString = `mongodb+srv://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_URL}/${MONGODB_DB}?retryWrites=true&w=majority`;

    await mongoose.connect(connectionString);
    console.log('‚úÖ Mongo connection successfully established!');

    // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–Ω—Ç–∞–∫—Ç–∏, —è–∫—â–æ –∫–æ–ª–µ–∫—Ü—ñ—è –ø–æ—Ä–æ–∂–Ω—è
    const count = await Contact.countDocuments();
    if (count === 0) {
      const filePath = path.join(__dirname, '..', 'contacts.json');
      const data = await fs.readFile(filePath, 'utf-8');
      const contacts = JSON.parse(data);
      await Contact.insertMany(contacts);
      console.log('üì¶ –ö–æ–Ω—Ç–∞–∫—Ç–∏ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ –∑ contacts.json');
    } else {
      console.log('üìÅ –ö–æ–Ω—Ç–∞–∫—Ç–∏ –≤–∂–µ —î –≤ –±–∞–∑—ñ');
    }

  } catch (error) {
    console.error('‚ùå Failed to connect to MongoDB or import contacts:', error.message);
    process.exit(1);
  }
};
